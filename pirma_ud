#include <iostream>
#include <string>
#include <vector>
#include <iomanip>
using std::cout;
using std::cin;
using std::endl;
using std::string;
using std::vector;
using std::setw;
using std::left;
using std::right;
using std::sort;
using std::getline;

struct studentas{
    string var;
    string pav;
    vector <int> paz;
    int egz;
    double gal;
    double med;
    };

studentas stud_iv_su_n();
studentas stud_iv_be_n();

//using namespace std;
int main()
{
    int n = 0;
    vector <studentas> grupe;
    char pasirinkimas = '0';
    string n_pasirinkimas = " ";
    cout << "Ar norite namu darbu skaiciu ivesti is anksto? (taip/ne)" << endl;
    while(n_pasirinkimas != "taip" && n_pasirinkimas != "ne"){
        cin >> n_pasirinkimas;
        if(n_pasirinkimas != "taip" && n_pasirinkimas != "ne"){
            cout << "Padarete klaida, iveskite taip/ne" << endl;
        }
    }
    cout << "Kiek studentu grupeje? "; cin >> n;
    if(n_pasirinkimas == "taip"){
        for(auto i = 0; i < n; i++){
            grupe.push_back(stud_iv_su_n());
        }
    }
    else{
        cout << "Namu darbu skaicius bus ivedamas laisvai, kol nepaspausite Enter." << endl;
        for(auto i = 0; i < n; i++){
            grupe.push_back(stud_iv_be_n());
        }
    }

    if(n > 0){
        cout << "Jei norite, kad atspausdintu tik vidurki iveskite 1" << endl;
        cout << "Jei norite, kad atspausdintu tik mediana iveskite 2" << endl;
        cout << "Jei norite, kad atspausdintu ir vidurki ir mediana iveskite 3" << endl;
        while(pasirinkimas != '1' && pasirinkimas != '2' && pasirinkimas != '3'){
            cin >> pasirinkimas;
            if(pasirinkimas != '1' && pasirinkimas != '2' && pasirinkimas != '3'){
                cout << "Padarete klaida, iveskite skaiciu is naujo:" << endl;
            }
        }
    }
    cout << setw(10) << left << "Vardas" << setw(15) << left << "Pavarde";

    if (pasirinkimas == '1') {
        cout << setw(17) << left << "Galutinis (Vid.)" << endl;
        for(int i = 0; i < 42; i++) cout << "-";
        cout << endl;
        for(auto pirmas:grupe){
            cout << setw(10) << left << pirmas.var << setw(15) << left << pirmas.pav;
            cout << setw(17) << pirmas.gal << endl;
        }
    }
    else if (pasirinkimas == '2') {
        cout << setw(19) << left << "/ Galutinis (Med.)" << endl;
        for(int i = 0; i < 44; i++) cout << "-";
        cout << endl;
        for(auto pirmas:grupe){
            cout << setw(10) << left <<pirmas.var << setw(15) << left << pirmas.pav;
            cout << setw(19) << pirmas.med << endl;
        }
    }
    else if (pasirinkimas == '3') {
        cout << setw(19) << left << "Galutinis (Vid.) / " << setw(17) << left << "Galutinis (Med.)" << endl;
        for(int i = 0; i < 61; i++) cout << "-";
        cout << endl;
        for(auto pirmas:grupe){
            cout << setw(10) << left << pirmas.var << setw(15) << left << pirmas.pav;
            cout << setw(19) << pirmas.gal << setw(17) << pirmas.med << endl;
        }
    }
    return 0;
}

studentas stud_iv_su_n(){
    int n, laik_paz, sum = 0;
    studentas pirmas;
    cout << "Iveskite studento duomenis" << endl;
    cout << "Vardas: "; cin >> pirmas.var;
    cout << "Pavarde: "; cin >> pirmas.pav;
    cout << "Kiek pazymiu turi studentas: " << pirmas.var << " " << pirmas.pav << ": "; cin >> n;
    cout << "Iveskite studento pazymius: " << endl;
    for(int i = 0; i < n; i++)
    {
        cout << i+1 << " "; cin >> laik_paz;
        pirmas.paz.push_back(laik_paz);
        sum += laik_paz; //sum += pirmas.paz[i];
    }
    cout << "Iveskite egzamino pazymi: "; cin >> pirmas.egz;
    pirmas.gal = double(sum)/double(n)*0.4 + pirmas.egz*0.6;
    vector <int> isrikiuoti_paz = pirmas.paz;
    isrikiuoti_paz.push_back(pirmas.egz);
    sort(isrikiuoti_paz.begin(), isrikiuoti_paz.end());
    n++;
    if (n % 2 == 0) {
        pirmas.med = (isrikiuoti_paz[n/2 - 1] + isrikiuoti_paz[n/2]) / 2.0;
    } else {
        pirmas.med = isrikiuoti_paz[n/2];
    }
    return pirmas;
}

studentas stud_iv_be_n(){
    int n = 0, laik_paz, sum = 0;
    string laik;
    studentas pirmas;
    cout << "Iveskite studento duomenis" << endl;
    cout << "Vardas: "; cin >> pirmas.var;
    cout << "Pavarde: "; cin >> pirmas.pav;
    cout << "Iveskite studento pazymius: " << endl;
    cin.ignore();
    while(true) {
        cout << n + 1 << " ";
        getline(cin, laik);
        if(laik.empty()) break;
        laik_paz = stoi(laik);
        n++;
        pirmas.paz.push_back(laik_paz);
        sum += laik_paz;
    }
    
    cout << "Iveskite egzamino pazymi: "; cin >> pirmas.egz;
    pirmas.gal = double(sum)/double(n)*0.4 + pirmas.egz*0.6;
    vector <int> isrikiuoti_paz = pirmas.paz;
    isrikiuoti_paz.push_back(pirmas.egz);
    sort(isrikiuoti_paz.begin(), isrikiuoti_paz.end());
    n++;
    if (n % 2 == 0) {
        pirmas.med = (isrikiuoti_paz[n/2 - 1] + isrikiuoti_paz[n/2]) / 2.0;
    } else {
        pirmas.med = isrikiuoti_paz[n/2];
    }
    return pirmas;
}
