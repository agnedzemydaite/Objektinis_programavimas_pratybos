#include <iostream>
#include <string>
#include <vector>
#include <iomanip>
#include <cctype>
using std::cout;
using std::cin;
using std::endl;
using std::string;
using std::vector;
using std::setw;
using std::left;
using std::right;
using std::sort;
using std::getline;
using std::isdigit;
using std::to_string;

struct studentas{
    string var;
    string pav;
    vector <int> paz;
    int egz;
    double gal;
    double med;
    };

studentas stud_iv_su_n();
studentas stud_iv_be_n();
studentas rando();
int skaiciu_iv(string i);
int n_iv(string i);

//using namespace std;
int main()
{
    srand(static_cast<unsigned int>(time(0)));
    int n = 0;
    vector <studentas> grupe;
    string pasirinkimas = "0";
    cout << "---- Studentu pazymiu pasirinkimo sistema ----" << endl;
    cout << "1. Studentu ivedimas su zinomu namu darbu skaiciumi (n)." << endl;
    cout << "2. Studentu ivedimas su nezinomu namu darbu skaiciumu (n)." << endl;
    cout << "3. Studentu ivedimas su automatiskai sugeneruotais balais." << endl;
    cout << "4. Studentu ivedimas is failo." << endl;
    
    cout << endl << "Iveskite savo pasirinkima: ";
    while(pasirinkimas != "1" && pasirinkimas != "2" && pasirinkimas != "3" && pasirinkimas != "4"){
        getline(cin, pasirinkimas);
        if(pasirinkimas != "1" && pasirinkimas != "2" && pasirinkimas != "3" && pasirinkimas != "4"){
            cout << "Padarete klaida, bandykite is naujo" << endl;
        }
    }
    
    if(pasirinkimas == "1"){
        cout << "Kiek studentu grupeje? "; n = n_iv("Kiek studentu grupeje?");
        for(auto i = 0; i < n; i++){
            grupe.push_back(stud_iv_su_n());
        }
    }
    else if(pasirinkimas == "2"){
        cout << "Kiek studentu grupeje? "; n = n_iv("Kiek studentu grupeje?");
        for(auto i = 0; i < n; i++){
            grupe.push_back(stud_iv_be_n());
        }
    }
    else if(pasirinkimas == "3"){
        cout << "Kiek studentu grupeje? "; n = n_iv("Kiek studentu grupeje?");
        for(auto i = 0; i < n; i++){
            grupe.push_back(rando());
        }
    }
    else if(pasirinkimas == "4"){
        
    }

    if(n > 0){
        pasirinkimas = "0";
        cout << "1. Spausdinti tik vidurki." << endl;
        cout << "2. Spausdinti tik mediana." << endl;
        cout << "3. Spausdinti ir vidurki, ir mediana." << endl;
        while(pasirinkimas != "1" && pasirinkimas != "2" && pasirinkimas != "3"){
            getline(cin, pasirinkimas);
            if(pasirinkimas != "1" && pasirinkimas != "2" && pasirinkimas != "3"){
                cout << "Padarete klaida, bandykite is naujo" << endl;
            }
        }
    }
    cout << setw(10) << left << "Vardas" << setw(15) << left << "Pavarde";

    if (pasirinkimas == "1") {
        cout << setw(17) << left << "Galutinis (Vid.)" << endl;
        for(int i = 0; i < 42; i++) cout << "-";
        cout << endl;
        for(auto pirmas:grupe){
            cout << setw(10) << left << pirmas.var << setw(15) << left << pirmas.pav;
            cout << setw(17) << pirmas.gal << endl;
        }
    }
    else if (pasirinkimas == "2") {
        cout << setw(17) << left << "Galutinis (Med.)" << endl;
        for(int i = 0; i < 44; i++) cout << "-";
        cout << endl;
        for(auto pirmas:grupe){
            cout << setw(10) << left <<pirmas.var << setw(15) << left << pirmas.pav;
            cout << setw(17) << pirmas.med << endl;
        }
    }
    else if (pasirinkimas == "3") {
        cout << setw(19) << left << "Galutinis (Vid.) / " << setw(17) << left << "Galutinis (Med.)" << endl;
        for(int i = 0; i < 61; i++) cout << "-";
        cout << endl;
        for(auto pirmas:grupe){
            cout << setw(10) << left << pirmas.var << setw(15) << left << pirmas.pav;
            cout << setw(19) << pirmas.gal << setw(17) << pirmas.med << endl;
        }
    }
    return 0;
}

studentas stud_iv_su_n(){
    int n, laik_paz, sum = 0;
    studentas pirmas;
    cout << "Iveskite studento duomenis" << endl;
    cout << "Vardas: "; cin >> pirmas.var;
    cout << "Pavarde: "; cin >> pirmas.pav;
    cin.ignore();
    cout << "Kiek pazymiu turi studentas: " << pirmas.var << " " << pirmas.pav << ": "; n = n_iv("Kiek pazymiu turi studentas:");
    cout << "Iveskite studento pazymius: " << endl;
    for(int i = 0; i < n; i++)
    {
        cout << i+1 << " "; laik_paz = skaiciu_iv(to_string(i+1));
        pirmas.paz.push_back(laik_paz);
        sum += laik_paz; //sum += pirmas.paz[i];
    }
    cout << "Iveskite egzamino pazymi: "; pirmas.egz = skaiciu_iv("Iveskite egzamino pazymi:");
    pirmas.gal = double(sum)/double(n)*0.4 + pirmas.egz*0.6;
    vector <int> isrikiuoti_paz = pirmas.paz;
    isrikiuoti_paz.push_back(pirmas.egz);
    sort(isrikiuoti_paz.begin(), isrikiuoti_paz.end());
    n++;
    if (n % 2 == 0) {
        pirmas.med = (isrikiuoti_paz[n/2 - 1] + isrikiuoti_paz[n/2]) / 2.0;
    } else {
        pirmas.med = isrikiuoti_paz[n/2];
    }
    return pirmas;
}

studentas stud_iv_be_n(){
    int n = 0, laik_paz, sum = 0;
    string laik;
    studentas pirmas;
    cout << "Iveskite studento duomenis" << endl;
    cout << "Vardas: "; cin >> pirmas.var;
    cout << "Pavarde: "; cin >> pirmas.pav;
    cout << "Iveskite studento pazymius: " << endl;
    cin.ignore();
    while(true) {
        cout << n + 1 << " ";
        getline(cin, laik);
        if(laik.empty()) break;
        else{
            for(char ch : laik){
                if(!isdigit(ch)){
                    cout << "Padarete klaida, bandykite is naujo" << endl;
                    continue;
                }
            laik_paz = stoi(laik);
            n++;
            pirmas.paz.push_back(laik_paz);
            sum += laik_paz;
            
            }
        }
    }
    
    cout << "Iveskite egzamino pazymi: "; pirmas.egz = skaiciu_iv("Iveskite egzamino pazymi:");
    pirmas.gal = double(sum)/double(n)*0.4 + pirmas.egz*0.6;
    vector <int> isrikiuoti_paz = pirmas.paz;
    isrikiuoti_paz.push_back(pirmas.egz);
    sort(isrikiuoti_paz.begin(), isrikiuoti_paz.end());
    n++;
    if (n % 2 == 0) {
        pirmas.med = (isrikiuoti_paz[n/2 - 1] + isrikiuoti_paz[n/2]) / 2.0;
    } else {
        pirmas.med = isrikiuoti_paz[n/2];
    }
    return pirmas;
}

studentas rando(){
    int n, laik_paz, sum = 0;
    studentas pirmas;
    cout << "Iveskite studento duomenis" << endl;
    cout << "Vardas: "; cin >> pirmas.var;
    cout << "Pavarde: "; cin >> pirmas.pav;
    n = rand() % 21;
    for(int i = 0; i < n; i++)
    {
        cout << i+1 << " ";
        laik_paz = rand() % 10 + 1;
        cout << laik_paz << endl;
        pirmas.paz.push_back(laik_paz);
        sum += laik_paz; //sum += pirmas.paz[i];
    }
    pirmas.egz = rand() % 10 + 1;
    cout << endl << pirmas.egz << endl;
    pirmas.gal = double(sum)/double(n)*0.4 + pirmas.egz*0.6;
    vector <int> isrikiuoti_paz = pirmas.paz;
    isrikiuoti_paz.push_back(pirmas.egz);
    sort(isrikiuoti_paz.begin(), isrikiuoti_paz.end());
    n++;
    if (n % 2 == 0) {
        pirmas.med = (isrikiuoti_paz[n/2 - 1] + isrikiuoti_paz[n/2]) / 2.0;
    } else {
        pirmas.med = isrikiuoti_paz[n/2];
    }
    return pirmas;
}

int skaiciu_iv(string i){
    string x;
    bool tiesa = true;
    while(true){
        tiesa = true;
        getline(cin, x);
        if(x.empty()){
            cout << "Padarete klaida, bandykite is naujo" << endl;
            cout << i;
            continue;
        }
        for(char ch : x){
            if(!isdigit(ch)){
                tiesa = false;
                cout << "Padarete klaida, bandykite is naujo" << endl;
                cout << i << " ";
                break;
            }
        }
        if(tiesa != false && (stoi(x) <= 0 || stoi(x) > 10)){
            cout << "Padarete klaida, bandykite is naujo" << endl;
            cout << i << " ";
            continue;
        }
        if(tiesa) return stoi(x);
    }
}

int n_iv(string i){
    string x;
    bool tiesa = true;
    while(true){
        tiesa = true;
        getline(cin, x);
        if(x.empty()){
            cout << "Padarete klaida, bandykite is naujo" << endl;
            cout << i;
            continue;
        }
        for(char ch : x){
            if(!isdigit(ch)){
                tiesa = false;
                cout << "Padarete klaida, bandykite is naujo" << endl;
                cout << i << " ";
                break;
            }
        }
        if(tiesa) return stoi(x);
    }
}
